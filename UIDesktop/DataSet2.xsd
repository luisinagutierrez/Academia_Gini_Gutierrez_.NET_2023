<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet2" targetNamespace="http://tempuri.org/DataSet2.xsd" xmlns:mstns="http://tempuri.org/DataSet2.xsd" xmlns="http://tempuri.org/DataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="cn" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="cn (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.UIDesktop.Properties.Settings.GlobalReference.Default.cn" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlansTableAdapter" GeneratorDataComponentClassName="PlansTableAdapter" Name="Plans" UserDataComponentName="PlansTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cn (Settings)" DbObjectName="db_Academia_302_TT_2023.dbo.Plans" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Plans] WHERE (([IdPlan] = @Original_IdPlan) AND ([PlanDescription] = @Original_PlanDescription) AND ([IdSpeciality] = @Original_IdSpeciality))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlan" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlan" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PlanDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PlanDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdSpeciality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdSpeciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Plans] ([PlanDescription], [IdSpeciality]) VALUES (@PlanDescription, @IdSpeciality);
SELECT IdPlan, PlanDescription, IdSpeciality FROM Plans WHERE (IdPlan = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PlanDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PlanDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdSpeciality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdSpeciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdPlan, PlanDescription, IdSpeciality FROM dbo.Plans</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Plans] SET [PlanDescription] = @PlanDescription, [IdSpeciality] = @IdSpeciality WHERE (([IdPlan] = @Original_IdPlan) AND ([PlanDescription] = @Original_PlanDescription) AND ([IdSpeciality] = @Original_IdSpeciality));
SELECT IdPlan, PlanDescription, IdSpeciality FROM Plans WHERE (IdPlan = @IdPlan)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PlanDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PlanDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdSpeciality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdSpeciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlan" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlan" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PlanDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PlanDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdSpeciality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdSpeciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdPlan" ColumnName="IdPlan" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdPlan" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdPlan" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdPlan" DataSetColumn="IdPlan" />
              <Mapping SourceColumn="PlanDescription" DataSetColumn="PlanDescription" />
              <Mapping SourceColumn="IdSpeciality" DataSetColumn="IdSpeciality" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="DataSet2" msprop:Generator_DataSetName="DataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Plans" msprop:Generator_RowEvHandlerName="PlansRowChangeEventHandler" msprop:Generator_RowDeletedName="PlansRowDeleted" msprop:Generator_RowDeletingName="PlansRowDeleting" msprop:Generator_RowEvArgName="PlansRowChangeEvent" msprop:Generator_TablePropName="Plans" msprop:Generator_RowChangedName="PlansRowChanged" msprop:Generator_RowChangingName="PlansRowChanging" msprop:Generator_TableClassName="PlansDataTable" msprop:Generator_RowClassName="PlansRow" msprop:Generator_TableVarName="tablePlans" msprop:Generator_UserTableName="Plans">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdPlan" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="IdPlan" msprop:Generator_ColumnPropNameInTable="IdPlanColumn" msprop:Generator_ColumnVarNameInTable="columnIdPlan" msprop:Generator_UserColumnName="IdPlan" type="xs:int" />
              <xs:element name="PlanDescription" msprop:Generator_ColumnPropNameInRow="PlanDescription" msprop:Generator_ColumnPropNameInTable="PlanDescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnPlanDescription" msprop:Generator_UserColumnName="PlanDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IdSpeciality" msprop:Generator_ColumnPropNameInRow="IdSpeciality" msprop:Generator_ColumnPropNameInTable="IdSpecialityColumn" msprop:Generator_ColumnVarNameInTable="columnIdSpeciality" msprop:Generator_UserColumnName="IdSpeciality" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Plans" />
      <xs:field xpath="mstns:IdPlan" />
    </xs:unique>
  </xs:element>
</xs:schema>